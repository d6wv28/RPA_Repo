<Activity mc:Ignorable="sap sap2010" x:Class="_001_GetSORequestFromEmail" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1334,11318.666666666666</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_001_GetSORequestFromEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Filters</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Mail.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Filters</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Models</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Mail.Outlook.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Data.Common</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="_001_GetSORequestFromEmail" sap:VirtualizedContainerService.HintSize="1344,11254" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strEmailFrom" />
      <Variable x:TypeArguments="x:String" Name="strInputEmailFolder" />
      <Variable x:TypeArguments="x:String" Name="CurrentEMailMessageFilename" />
      <Variable x:TypeArguments="x:String" Name="OrchestratorFolderPath" />
      <Variable x:TypeArguments="x:String" Name="strInputExcelFolder" />
      <Variable x:TypeArguments="sd:DataRow" Name="dataRow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_RSKSORequest" />
      <Variable x:TypeArguments="x:String" Name="RSKQueueName" />
      <Variable x:TypeArguments="x:String" Name="EmailFolder" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable]" Name="dt_tempDuplicateOrders" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign: get argument values" sap:VirtualizedContainerService.HintSize="1282,333.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strEmailFrom]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("EmailAccount").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strInputEmailFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("InputEmailFolder").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[OrchestratorFolderPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("OrchestratorQueueFolder").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strInputExcelFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("InputExcelFolder").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[RSKQueueName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("OrchestratorQueueName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[EmailFolder]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("EmailFolder").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Utility_Workflows\000_GetBatchRun.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="1282,210" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" Level="Info" LogEntry="[UiPath.Core.Activities.LogEntryType.OnlyInvocation]" LogExit="[UiPath.Core.Activities.LogExitType.OnlySuccessfulReturn]" UnSafe="False" WorkflowFileName="Utility_Workflows\000_GetBatchRun.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_BatchRun" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <TryCatch sap2010:Annotation.AnnotationText="Try to Sales order request to the Queue and Catch if Outlook excpection is hrown." DisplayName="Try to Sales order request to the Queue and Catch if Outlook excpection is hrown." sap:VirtualizedContainerService.HintSize="1282,10455.333333333334" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <umab:OutlookApplicationCard Account="strEmailFrom" AccountMismatchBehavior="UseDefaultEmailAccount" DisplayName="Use Desktop Outlook App get emails with SO details in table in mail body" sap:VirtualizedContainerService.HintSize="838.6666666666666,10130" sap2010:WorkflowViewState.IdRef="OutlookApplicationCard_2">
          <umab:OutlookApplicationCard.Body>
            <ActivityAction x:TypeArguments="um:IMailQuickHandle">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Outlook" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do save and open for data scraping" sap:VirtualizedContainerService.HintSize="804.6666666666666,9942" sap2010:WorkflowViewState.IdRef="Sequence_32">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <umab:ForEachEmailX MailFilter="{x:Null}" DisplayName="For Each Email: in 'SOP RSK Orders' mail folder" sap:VirtualizedContainerService.HintSize="742.6666666666666,9854" sap2010:WorkflowViewState.IdRef="ForEachEmailX_3" IncludeSubfolders="False" Mails="[Outlook.Folder(EmailFolder)]" NumberOfEmailsLimit="0" RetrieveAttachments="False" UnreadOnly="False" WithAttachmentsOnly="False">
                  <umab:ForEachEmailX.Body>
                    <ActivityAction x:TypeArguments="snm:MailMessage, x:Int32">
                      <ActivityAction.Argument1>
                        <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="CurrentMail" />
                      </ActivityAction.Argument1>
                      <ActivityAction.Argument2>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                      </ActivityAction.Argument2>
                      <Sequence DisplayName="Do save email and scrape the table" sap:VirtualizedContainerService.HintSize="708.6666666666666,9559.333333333334" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="excelfilepath" />
                          <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable]" Name="dt_DuplicateOrders" />
                          <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable]" Name="dt_UniqueRecords" />
                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="dictSOPRSKsalesOrders" />
                          <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable]" Name="dt_UniqueFromDuplicatesSOs" />
                          <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable]" Name="dt_UrgentDeliveries" />
                          <Variable x:TypeArguments="x:String" Name="strConsolidatedMailBody" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign: get mail message filename" sap:VirtualizedContainerService.HintSize="646.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[CurrentEMailMessageFilename]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[path.Combine(TodayFolderPath,strInputEmailFolder,CurrentMail.From.User.ToString+"_"+DateTime.Now.ToString("hhmmss")+".htm")]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <ui:SaveOutlookMailMessage sap2010:Annotation.AnnotationText="The file to be opened in chrome application" DisplayName="Save Email in html format with SO Request in table" FileName="[path.GetFileName(CurrentEMailMessageFilename)]" Folder="[path.GetDirectoryName(CurrentEMailMessageFilename)]" sap:VirtualizedContainerService.HintSize="646.6666666666666,131.33333333333334" sap2010:WorkflowViewState.IdRef="SaveOutlookMailMessage_1" MailMessage="[CurrentMail]" ReplaceExisting="True" SaveAsType="Html">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SaveOutlookMailMessage>
                        <ui:LogMessage sap2010:Annotation.AnnotationText="Log Message: Mail message file save in the RSK_SOP\Batch_Run\Input Folder" DisplayName="Log Message: Mail message file save in the RSK_SOP\Batch_Run\Input Folder" sap:VirtualizedContainerService.HintSize="646.6666666666666,148" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Mail message file saved in the&quot;+Path.GetDirectoryName(CurrentEMailMessageFilename)]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Always" ContinueOnError="True" DisplayName="Use Browser Chrome: PGP Team Emails" sap:VirtualizedContainerService.HintSize="646.6666666666666,86" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" OpenMode="Never" ScopeGuid="54315e1e-74d1-4bc0-8815-8afc30525c1d" Timeout="1" Version="V2">
                          <uix:NApplicationCard.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do close application" sap:VirtualizedContainerService.HintSize="416,263.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message: Kill Process: Close all Outlook instances" sap:VirtualizedContainerService.HintSize="354,172.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Close: Close chrome app instances&quot;]" />
                              </Sequence>
                            </ActivityAction>
                          </uix:NApplicationCard.Body>
                          <uix:NApplicationCard.TargetApp>
                            <uix:TargetApp Area="-11, -11, 1942, 1150" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAwASURBVGhDxZl7cFTVHcd3pqOgKAQEFeQRIIQ8N5vdBAOBsHkIkUcSOu2M01GTmb7sHx1mnOlMq22DM7X1nRgeawMhPATbUsWq02kryQaSGINI9I+q40xZwIQQKNkkqAR295x+f79zzr131wCiaM/Md76/3++cm/v5nXvusgmu6zFCfk/SmRJvzZmy/LqB0rz9Z0rzQ2dL8sIDJXlyoCRfni3NR+wLoR48U5JX11fqq+r3e5L15f+fQdDnSvPXnynOCxpQ5Y642ORKp4t9WjTnE6eLvT0Dfl/1t9oMgZ8tWVR7tsQ3iN0UCtQX5wrQuF2zwXUzfq847SdnNX/jjeBY1AJaHw0NocEYjup+AqQ6QwEQkIj7DSjHXs6VTEzuxfXeWn276zdoZwaK83t4N3kHfXonbTegZlcNkAG38uWmTnGuoPwUK5dzcuSh6/Y0BvyLqgEZtnfSq3bSAnXCGjAFBQegDWl5EYEqaFZRnLiJvqLc8MllniqN8dUGPU4Da8Cs3SQ4dgDCDaCSglCuQQEGKB17BMFyzu7hWMnE8GXQUs9XO1L9Rd7auN21YBwxAShnYIoNCM/pOK62zINGPMoBqJ1j9qV23AvvXZqDJtzX1gTAq81jvuJj164A9Y5ZkNoVjILTdQYzdQATpC0FbfQJeWGO6C/yVGu8Kw96eQA7SGAMjZsSqLWDWtYu2rvJMUPBLcilObyT7IAxnigCZVhHzCo0cg/2F6Rd/cUGbMi5iwRkdtLsmrV7JA0YJ2sXE3OtQrewgCk2kEsodhOskjNfki1OLHH3aMyxB70w1i5CTvB4QAcMNNauMpx2vYMOZ4mTzhoAVe6WJ5fYrpRtRE1s0Ljxw/NSVfIzDxdbu6mhVAMWkDPOsXaRcwD1lhfK4aaAHD36joyc6pPWiIxIMXxExo4/I6M9FTLanQf5SCL6NjlychNjLmbNUd3rVFj2eJI0tj18e9ftKNpRJY+uyjeAFpwC1MB6l5y72v+9cob+skOceR2NrGGgWLdXRLtzAUvSkN3kuXCu65jWqjzS5Yl/Cp7mqmTv3u9KH/Sz361wAiZAK9Gj5seNRxquf1LGRkY0mhqnwkK+8d5FuTU4Khuhto8uyY/7o3pWjyieyomnAeQBnEc5w6o8RrUuqikBGp5j6vFPwbunqiZ3b5XI3VMlvXvWyb9//24NqM6p8yzyWVWxGNq2RdOo8XrPRfnQjk9lfu2QXLRhmD1/gxbiyvrzWHNJr1Yj9kmAwSAZ7coBKBxxjMB1HOlyq7grG/AUuzHvXq/xqYF1PYAXBE+NPPhUOcNaL9Bigs6WJ4wWZ8vB+ic0Au14TP60WYHnaeA8irW4Tq6borV0jRmx408xlAYTka5sDZsNeI6N0GiWrmcFGZ6Oj+fFSuFBA7kvVkkPRL75oaXi5OIscWJxFgPrmPO+dSuFOTYEsrZuJA7Y91tbVs0xT6JrrCbwkkePlgOe4FiAZdnxW+SZWJNp1WQwOcnl2bO20rO7UiaqsKlCfrDcLU4UZInjBdRElmQvyBTn33hV3RjjJ9vPAzTskIL1xtXCdo45k/8Y15ohhg9r6EwRg6JvZTJwtCsDcQYaQExONc6hjowal2dXRV3OrgqpVMlODeTsrhBP/HyZBR26O1OGCjJl77oV+pZSvoYzTyBjSzUxtuy5145e1D8N7/XhAhuOlW55BIp1paMZitOUOhbWu3J2rg26d1ZI964K4WzCvWutoHr3PR7J8FrnnvuDvp2Uq58dlrm/CdsCUFx+OTnW/cjxFGInN2noNBJg00RMOdcinQutuUgn5emvUgMh98618jISP/h9mTi+KEOElOSFdw/zzT7Cx6IHACQCMfGVNThGLWy9C2KoWwESKMMuVNCdqULVUlFDTEIc60wNubJ3rhHuHYCFsllrVIw6xVR7vcrLDRxDA+blbf3gkswBEOvX2jWgcmfNWYfTesis+Zs5RqO9AAYka4HDLYlIh/JoZwqOUErYld1MkIAlv4xKG8plKD9dHMtLE+pOUgZaL0g3IIwMbFxtjNjAO+tbWj7XPxXvQQeDATKFIW3NF9GO+TzPOcVwV9aO1SILkPFaLbO2QyoWmVD9Dwvksbx0qwG6qYFwKvsKeeKcqcU1QKAWrNE8pc75aI5jrJnHsStr+5pwZvMqkUnAEMXsTatUzlolFgXK5fuFGfiS1ss3evXoqMx+dFBmPXqOnUDYnXGCm7VZVHPUW3AceUSGDSA0F8dlLvK5JucaOdfbk7nmyti+KqQgV0vEwgKHG1Gd9Mv1hfLzI918rz68eASkpODGVuLcF9d+eEp9TxJDXQoUcARoFO2YI6hm6pxzbU7IlbFt1X5IZhjYbfcmxPcKFsVYd+SvjXwzGjXbhmUmADIBpfzateKZIf3T8DH6n8cAOAeg8Yq0z4bPBvRsQbGVt88JujKbVtcpOA1LzZgcSt9WLtLZ7yUX99VV6ttJuf/dizLjkXMyAyAsxATFtavIrNv/7qj+aWjgnSWAnAUwApwlYogj7bNk5NAszsktUf3gzHpXWmN5jYKEtpZLEoNvNVI1JZV3n3pf31LK6q0jMh0gRgSV/sh/LVDnXPyac7h2WP8UHJ+BfRpuJivaPhON3AXNBDhyrt2l4natQzMq8WXOn8RwjeUybetKbgJNIS4X7E5RDWtKX6qWIxc/5Rv3DsZk2VNhmQZoAk/7lXI7PmfVaI2plT0dlr36H7CR0U+x+wWAu0uBHpqh4xki6nCqRQ7NUHn7DCGDd6pf8tMaVwYhDUq+EvDwP5qarlOua4+/FeCb06AmHsRuEtwXpBtw6gGspWvMGPr4MQ1NcNMBOx3xdByR6VYebWennOuxg9PtX/AXNq5cvxBgtlYIR5xQh15QtY1HdmsENV45MipLnhyUqYBcCBk3eqBxSL7iOPM0Xn6/SQ4G6dgosMjBOy1FD90JaDu36kr234mS6/xJAAunAo7EgBqSPNWI5vWcqdGToCPgHB/2ReWb/74oG978TG488BkauxC34zRGRs/LxzsDct9r+PJ26A6h4O7QMRwiV7odOUso3YHfBfTxMQNwtRZogPwekRq4BzGE2gKdLwjAdY6Y5/177hcvf/RPjXb18Xbfe9L/4v3C37QcsLczoIKcBrhpdq1tGovglU8V7G3TmjW2PegpAGjQgC3YwrBKW8ricm7E5DSnc//u++XjHQEG/GTktMaVHFOt4fAu6dtepa7FdScO4FPFApsKyKnxcdtUNGTnkbbbWBeCSWP/hS4lsKI2RcOmBMqEBc5upHKswzzWOWKub9ZCzXKed9ZKxS/2egF7GwGyKziCnqJj0pQ4p7nYwSlX/kMvbtBjQWgZ+JTNpVrO+cTcWTPrS+X8zaUKHrE34JfH/4UXUUMxYJAgp1CufbLgWnAycggea5t8TGNefiQH/Mm4SXj+JtxUiwEcTjDKS4QB4xoLNX2dtcaZbyqR9fvSATeZIBVoW5KIQpFgkq5RTtCTuKY0KSwvd3QSx/yGkpp5m0oEydxUCfFGOAn5PLi9Rs3xdaZOzmvt65Y1LtWgNpyKJ2ngSTJq+UQRaZ3IHg0mXdv/1qRsLNvAIGOq2IK0ag3FCWtszeX1Sn95BV+NCcwABicCXDvD3groW6mmRHHLxLH/oHu1gZvXMhhEEHONM4wCQ03Ma0BMc855nRsn3deUp4AcAjBAE2u3YMcpvkXGgrd8vf+1xMdrFW4eTn7eb0M+XyyTG/yAhxCb2lysoTrP0ZqE/Pg/8HICjsDiNQH1CahPQHyziEKIw5daJtRojK830EQy4EIM+DyA6rWrXMfLKVdzRtb8cvHwziwFx6A3Sw2pXectN+G4QK0398jg+C/3wl7LAEytAZtDwPXLGXROPcXKrbhOzZEKNxdg9/GpAlCWBo223mRBR1vHIx4XjrSM/2rn/csOehqAamZYQDo1+7kibmB2PZzyuiKub/0zfg1kwPGA1TowzoqjrTcOwmvxMfnF/7j4pgY3UuevAWAPg6sGnEKtSC7ZVABIgtUCeLRlnIgcuBHg44KXguPWf6vgYw3dTBV2vG7Ws8uCgA9RE4jFn/bhl5CWG/BC3hAC9H40UXcp+J3q6wPtcv0P8b6M+c3aLu0AAAAASUVORK5CYII=" InformativeScreenshot="5c7ad0308648b547046566cb407b5398.jpg" Selector="&lt;html app='chrome.exe' url='*.htm' /&gt;" Title="RE: [납품요청 및 인보이스 첨부] 삼성 레이저믹스 납품 요청 건(6/24, 6/27) - Message (HTM*" Url="*.htm" />
                          </uix:NApplicationCard.TargetApp>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </uix:NApplicationCard>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="BuisnessWorkflow\001_ParsingTableInMailBody.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="646.6666666666666,210" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" Level="Info" LogEntry="[UiPath.Core.Activities.LogEntryType.OnlyInvocation]" LogExit="[UiPath.Core.Activities.LogExitType.OnlySuccessfulReturn]" UnSafe="False" WorkflowFileName="BuisnessWorkflow\001_ParsingTableInMailBody.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CurrentEmailFilepath">[CurrentEMailMessageFilename]</InArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtSOPRSKData">[dt_RSKSORequest]</OutArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:FilterDataTable sap2010:Annotation.AnnotationText="Filter Data Table: Input table if any blank row details" DataTable="[dt_RSKSORequest]" DisplayName="Filter Data Table: Input table if any blank row details" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="646.6666666666666,226.66666666666666" sap2010:WorkflowViewState.IdRef="FilterDataTable_13" OutputDataTable="[dt_RSKSORequest]" SelectColumnsMode="Remove">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                </ui:FilterOperationArgument.Column>
                              </ui:FilterOperationArgument>
                              <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                </ui:FilterOperationArgument.Column>
                              </ui:FilterOperationArgument>
                              <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:Int32">[9]</InArgument>
                                </ui:FilterOperationArgument.Column>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <x:Null />
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:FilterDataTable>
                        <If sap2010:Annotation.AnnotationText="check If Allow Dup column exist, If not add column as Allow Dup" Condition="[Not(dt_RSKSORequest.Columns.Contains(&quot;Allow Dup&quot;))]" DisplayName="check If Allow Dup column exist, If not add column as Allow Dup" sap:VirtualizedContainerService.HintSize="646.6666666666666,936.6666666666666" sap2010:WorkflowViewState.IdRef="If_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,478.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Allow Dup" DataTable="[dt_RSKSORequest]" DisplayName="Add Data Column= Allow Dup" sap:VirtualizedContainerService.HintSize="354,223.33333333333334" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
                              <ui:LogMessage DisplayName="Log Message:&quot;'Allow Dup' data column added in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString" sap:VirtualizedContainerService.HintSize="354,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;'Allow Dup' data column added in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,255.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message:&quot;'Allow Dup' data column already exist in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString" sap:VirtualizedContainerService.HintSize="354,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;'Allow Dup' data column already exist in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString]" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <If sap2010:Annotation.AnnotationText="check If Request Sender column exist, If not add column " Condition="[Not(dt_RSKSORequest.Columns.Contains(&quot;Request Sender&quot;))]" DisplayName="check If Request Sender column exist, If not add column " sap:VirtualizedContainerService.HintSize="646.6666666666666,148" sap2010:WorkflowViewState.IdRef="If_11">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,478.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_94">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Request Sender" DataTable="[dt_RSKSORequest]" DisplayName="Add Data Column= Request Sender" sap:VirtualizedContainerService.HintSize="354,223.33333333333334" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3" />
                              <ui:LogMessage DisplayName="Log Message:&quot;Request Sender' data column added in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString" sap:VirtualizedContainerService.HintSize="354,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;'Request Sender' data column added in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,255.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_95">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message:&quot;'Request Sender' data column already exist in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString" sap:VirtualizedContainerService.HintSize="354,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;'Request Sender' data column already exist in RSK Sales order input for order request from:&quot;+CurrentMail.From.ToString]" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign DisplayName="Assign: Get all Unique record from input Sales order table" sap:VirtualizedContainerService.HintSize="646.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[dt_UniqueRecords]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest.DefaultView.ToTable(true)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: clone headers from dtRSKSORequest to dtDuplicaterecords" sap:VirtualizedContainerService.HintSize="646.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[dt_DuplicateOrders]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest.Clone]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: init TempdtDuplicate" sap:VirtualizedContainerService.HintSize="646.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_30">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[dt_tempDuplicateOrders]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest.Clone]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <TryCatch DisplayName="Try Catch: try for finding Duplicate sales order" sap:VirtualizedContainerService.HintSize="646.6666666666666,1257.3333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Sequence: Get duplicate sales order: try for finding Duplicate sales order" sap:VirtualizedContainerService.HintSize="512,986" sap2010:WorkflowViewState.IdRef="Sequence_68">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign: Get duplicate orders from dtRSKSOPRequest by grouping" sap:VirtualizedContainerService.HintSize="450,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataTable">[dt_tempDuplicateOrders]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataTable">[(From row in dt_RSKSORequest.AsEnumerable() Group row by key = New With {Key .OrderType = row("Order type"), Key.Material = row("Material"), Key.RequestedDeliveryDate = row("Date requested"), Key.SOLDtoParty = row("SOLD to Party"), Key.SalesOffice = row("Sales Office")} into group from g in group where group.Count()&gt;1 Select g).CopyToDataTable()]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each duplicate entries in tempdtDuplicateOrders" sap:VirtualizedContainerService.HintSize="450,450" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[dt_tempDuplicateOrders.Rows]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentDataRow" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,302" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[currentDataRow.ItemArray]" DataTable="[dt_DuplicateOrders]" DisplayName="Add Data Row. Duplicate rows" sap:VirtualizedContainerService.HintSize="354,214" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                              <ui:CommentOut DisplayName="Comment Out: add and remove unique" sap:VirtualizedContainerService.HintSize="450,86" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="1012.6666666666666,1155.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence sap2010:Annotation.AnnotationText="Get Unique duplicates removed from dtRSKSOPRequest and Unique sales order with Clubbed Order Quantities Added to the dtRSKSOPRequest" DisplayName="Sequence: Get Unique duplicates removed from dtRSKSOPRequest and Unique sales order with Clubbed Order Quantities Added to the dtRSKSOPRequest" sap:VirtualizedContainerService.HintSize="950.6666666666666,1067.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign: get temporary unique from dupllicates " sap:VirtualizedContainerService.HintSize="888.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_27">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataTable">[dt_tempDuplicateOrders]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataTable">[dt_tempDuplicateOrders.DefaultView.ToTable(true)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign: Unique sales order from duplicate sales order" sap:VirtualizedContainerService.HintSize="888.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataTable">[dt_UniqueFromDuplicatesSOs]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest.Clone]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:Annotation.AnnotationText="Assign get Unique from duplicate values clubbbed Quantity for common material sales order" DisplayName="Assign get Unique from duplicate values clubbbed Quantity for common material sales order" sap:VirtualizedContainerService.HintSize="888.6666666666666,162.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_29">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataTable">[dt_UniqueFromDuplicatesSOs]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataTable">[(From row In dt_tempDuplicateOrders.AsEnumerable() Group row By key = New With { Key .OrderType = row("Order type"), Key .SalesOffice = row("Sales Office"), Key .SOLDToParty = row("SOLD to Party"), Key .Material = row("Material"), Key .MaterialDescription = row("Material Description"), Key .UOM = row("UOM"), Key .DateRequested = row("Date requested"), Key .OrderReason = row("Order Reason"), Key .UnloadingPoint = row("Unloading Point"), Key .AllowDup = row("Allow Dup") } Into Group Select dt_UniqueFromDuplicatesSOs.LoadDataRow(New Object() { key.OrderType, key.SalesOffice, key.SOLDToParty, key.Material, key.MaterialDescription, Group.Sum(Function(r) Convert.ToInt32(r("Quantity").ToString().Replace(",", ""))), key.UOM, key.DateRequested, key.OrderReason, key.UnloadingPoint, key.AllowDup }, False)).CopyToDataTable()]</InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each Row in Data Table: Remove Datarow from dtRSKSOPRequest" DataTable="[dt_UniqueFromDuplicatesSOs]" DisplayName="For Each Row in Data Table: Remove Datarow from dtRSKSORequest" sap:VirtualizedContainerService.HintSize="888.6666666666666,148" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,274.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:FilterDataTable DataTable="[dt_RSKSORequest]" DisplayName="Filter Data Table filter matched rows from dtRSKSORequest" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="354,186.66666666666666" sap2010:WorkflowViewState.IdRef="FilterDataTable_8" OutputDataTable="[dt_RSKSORequest]" SelectColumnsMode="Remove">
                                                <ui:FilterDataTable.Filters>
                                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:String">["Order type"]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">[CurrentRow("Order type").ToString.Trim]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:String">["Material"]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">[CurrentRow("Material").ToString.Trim]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:String">["SOLD to Party"]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">[CurrentRow("SOLD to Party").ToString.Trim]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:String">["Date requested"]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">[CurrentRow("Date requested").ToString.Trim]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                      <ui:FilterOperationArgument.Column>
                                                        <InArgument x:TypeArguments="x:String">["Sales Office"]</InArgument>
                                                      </ui:FilterOperationArgument.Column>
                                                      <ui:FilterOperationArgument.Operand>
                                                        <InArgument x:TypeArguments="x:String">[CurrentRow("Sales Office").ToString.Trim]</InArgument>
                                                      </ui:FilterOperationArgument.Operand>
                                                    </ui:FilterOperationArgument>
                                                  </scg:List>
                                                </ui:FilterDataTable.Filters>
                                                <ui:FilterDataTable.SelectColumns>
                                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                    <x:Null />
                                                  </scg:List>
                                                </ui:FilterDataTable.SelectColumns>
                                              </ui:FilterDataTable>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_UniqueFromDuplicatesSOs]" DisplayName="For Each Row in dtUniqueFromDuplicateSOs add to dtRSKSORequest" sap:VirtualizedContainerService.HintSize="888.6666666666666,86" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,347.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add Data Row: Unique Sales order with clubbed Quantity" ArrayRow="[CurrentRow.ItemArray]" DataTable="[dt_RSKSORequest]" DisplayName="Add Data Row: Unique Sales order with clubbed Quantity" sap:VirtualizedContainerService.HintSize="354,259.3333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_6">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:AddDataRow>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <ui:Comment DisplayName="Comment data removal" sap:VirtualizedContainerService.HintSize="888.6666666666666,127.33333333333333" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// code to remove the dtUniqueFromDuplicateSOs from dtRSKSOPRequests" />
                                      <ui:LogMessage DisplayName="Log Message:&quot;Rows removed from dtRSKSORequest and Unique From duplicates with clubbed Quantity for common material order added back&quot;" sap:VirtualizedContainerService.HintSize="888.6666666666666,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Rows removed from dtRSKSORequest and Unique From duplicates with clubbed Quantity for common material order added back&quot;]" />
                                    </Sequence>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" sap2010:Annotation.AnnotationText="Add Data Column=UniqueKey in dtDuplicateSOs" ColumnName="UniqueKey" DataTable="[dt_DuplicateOrders]" DisplayName="Add Data Column=UniqueKey in dtDuplicateSOs" sap:VirtualizedContainerService.HintSize="450,244.66666666666666" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:AddDataColumn>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="516.6666666666666,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:LogMessage DisplayName="Log Message: System exception" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Warn" Message="[&quot;No Duplicate order exception: &quot;+exception.Message]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <If sap2010:Annotation.AnnotationText="check If any duplicate records found then mail back to user by marking Allow Dup=Failed" Condition="[dt_DuplicateOrders.RowCount&gt;0]" DisplayName="check If any duplicate records found then mail back to user by marking Allow Dup=Failed" sap:VirtualizedContainerService.HintSize="646.6666666666666,1108.6666666666667" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,786.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_55">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke Code: Get Duplicate details structured Mark only on sales order as failed&#xA;Allow Dup=Failed Or&#xA;Allow Dup= Allowed" Code="' Populating UniqueKey column with some logic&#xA;For Each row As DataRow In dtDuplicateSOs.Rows&#xA;    ' Assuming each row has a column named &quot;&quot;SomeColumn&quot;&quot; to generate UniqueKey&#xA;    row(&quot;UniqueKey&quot;) = row(&quot;SOLD to Party&quot;).ToString()&#xA;Next&#xA;&#xA;' Group the rows by the UniqueKey column&#xA;Dim duplicateGroups = dtDuplicateSOs.AsEnumerable() _&#xA;    .GroupBy(Function(row) row(&quot;UniqueKey&quot;).ToString()) _&#xA;    .Where(Function(g) g.Count() &gt; 1)&#xA;&#x9;&#xA;' Iterate through each group of duplicates&#xA;For Each Group In duplicateGroups&#xA;    Dim isFirst As Boolean = True&#xA;    For Each row In Group&#xA;        If isFirst Then&#xA;            row(&quot;Allow Dup&quot;) = &quot;Allowed&quot;&#xA;            isFirst = False&#xA;        Else&#xA;            row(&quot;Allow Dup&quot;) = &quot;Failed&quot;&#xA;        End If&#xA;    Next&#xA;Next&#xA;" DisplayName="Invoke Code: Get Duplicate details structured Mark only on sales order as failed" sap:VirtualizedContainerService.HintSize="354,276" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                                <ui:InvokeCode.Arguments>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dtDuplicateSOs">[dt_DuplicateOrders]</InOutArgument>
                                </ui:InvokeCode.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeCode>
                              <ui:LogMessage sap2010:Annotation.AnnotationText="Log Message: Allow Dup=Failed updated for duplicate records" DisplayName="Log Message: Allow Dup=Failed updated for duplicate records" sap:VirtualizedContainerService.HintSize="354,222" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Allow Dup=Failed updated for duplicate records&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:LogMessage>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Utility_Workflows\SendEmailDuplicatesAndExceptions.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="354,200.66666666666666" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" Level="Warn" LogEntry="[UiPath.Core.Activities.LogEntryType.OnlyInvocation]" LogExit="[UiPath.Core.Activities.LogExitType.OnlySuccessfulReturn]" UnSafe="False" WorkflowFileName="Utility_Workflows\SendEmailDuplicatesAndExceptions.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[Nothing]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ExMailTo">[CurrentMail.From.Address]</InArgument>
                                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtDuplicateRecords">[dt_DuplicateOrders]</InArgument>
                                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtUrgentDeliveries">[Nothing]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strExceptionFilePath" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,104.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_56">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign DisplayName="Assign: get header copy for Urgent deliveries" sap:VirtualizedContainerService.HintSize="646.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_32">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[dt_UrgentDeliveries]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest.Clone]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign: Get unique SO request" sap:VirtualizedContainerService.HintSize="646.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_35">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[dt_RSKSORequest.DefaultView.ToTable(true)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <TryCatch DisplayName="Try Catch: Check if any Urgent deliveries" sap:VirtualizedContainerService.HintSize="646.6666666666666,2670.6666666666665" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Try for urgent SOs" sap:VirtualizedContainerService.HintSize="608,2399.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_82">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_RSKSORequest]" DisplayName="For Each Row in dtRSKSORequest" sap:VirtualizedContainerService.HintSize="546,1332.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                                <ui:ForEachRow.Body>
                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="512,1132.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="formatedDeliveryDate" />
                                        <Variable x:TypeArguments="x:String" Name="strInputDateRequested" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign: get input requested date delivery" sap:VirtualizedContainerService.HintSize="450,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_34">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strInputDateRequested]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[CurrentRow("Date requested").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:Annotation.AnnotationText="Assign: Get Email Sender address asssigned Request Sender column" DisplayName="Assign: Get Email Sender address asssigned Request Sender column" sap:VirtualizedContainerService.HintSize="450,148" sap2010:WorkflowViewState.IdRef="Assign_33">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[CurrentRow("Request Sender")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[CurrentMail.From.Address.ToString]</InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="00_GetInputDateParsed - Invoke Workflow File (Utility_Workflows\00_GetInputDateParsed.xaml)" sap:VirtualizedContainerService.HintSize="450,210" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Utility_Workflows\00_GetInputDateParsed.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_strInputRequestedDeliveryDate">[strInputDateRequested]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_FormatedDeliveryDate">[formatedDeliveryDate]</OutArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <If Condition="[DateTime.ParseExact(formatedDeliveryDate,&quot;dd.MM.yyyy&quot;,system.Globalization.CultureInfo.InvariantCulture,nothing)&lt;=DateTime.Now]" DisplayName="check if Date requested &lt;=Today : for urgent deliveries" sap:VirtualizedContainerService.HintSize="450,569.3333333333334" sap2010:WorkflowViewState.IdRef="If_9">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,302" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[CurrentRow.ItemArray]" DataTable="[dt_UrgentDeliveries]" DisplayName="Add Data Row: to urgent delivery table" sap:VirtualizedContainerService.HintSize="354,214" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,104.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEachRow.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEachRow>
                              <If Condition="[dt_UrgentDeliveries.RowCount&gt;0]" DisplayName="If dtUrgentDeliveries rowcount&gt;0" sap:VirtualizedContainerService.HintSize="546,978.6666666666666" sap2010:WorkflowViewState.IdRef="If_10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="512,711.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For  Each urgent delivery dates filter records from dtRSKSalesOrder" sap:VirtualizedContainerService.HintSize="450,422.6666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[dt_UrgentDeliveries.DefaultView.ToTable(true, &quot;Date requested&quot;).AsEnumerable()]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentDataRow" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,274.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_96">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:FilterDataTable DataTable="[dt_RSKSORequest]" DisplayName="Filter: urgent deliveries" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="354,186.66666666666666" sap2010:WorkflowViewState.IdRef="FilterDataTable_12" OutputDataTable="[dt_RSKSORequest]" SelectColumnsMode="Remove">
                                              <ui:FilterDataTable.Filters>
                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                    <ui:FilterOperationArgument.Column>
                                                      <InArgument x:TypeArguments="x:Int32">[8]</InArgument>
                                                    </ui:FilterOperationArgument.Column>
                                                    <ui:FilterOperationArgument.Operand>
                                                      <InArgument x:TypeArguments="x:String">[currentDataRow("Date requested").ToString.Trim]</InArgument>
                                                    </ui:FilterOperationArgument.Operand>
                                                  </ui:FilterOperationArgument>
                                                </scg:List>
                                              </ui:FilterDataTable.Filters>
                                              <ui:FilterDataTable.SelectColumns>
                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                  <x:Null />
                                                </scg:List>
                                              </ui:FilterDataTable.SelectColumns>
                                            </ui:FilterDataTable>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Utility_Workflows\SendEmailDuplicatesAndExceptions.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="450,200.66666666666666" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" Level="Warn" LogEntry="[UiPath.Core.Activities.LogEntryType.OnlyInvocation]" LogExit="[UiPath.Core.Activities.LogExitType.OnlySuccessfulReturn]" UnSafe="False" WorkflowFileName="Utility_Workflows\SendEmailDuplicatesAndExceptions.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                        <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">[Nothing]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExMailTo">[in_Config("SME_Email").ToString]</InArgument>
                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtDuplicateRecords">[nothing]</InArgument>
                                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtUrgentDeliveries">[dt_UrgentDeliveries]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_strExceptionFilePath" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,104.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="612.6666666666666,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:LogMessage DisplayName="Log Message: No Urgent delivery SO" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;No Urgent delivery SO are found&quot;]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <If sap2010:Annotation.AnnotationText="check if Data extracted is not nothing, Data to be pushed to Queue" Condition="[dt_RSKSORequest.RowCount&gt;=1]" DisplayName="check if Data extracted is not nothing, Data to be pushed to Queue" sap:VirtualizedContainerService.HintSize="646.6666666666666,1844" sap2010:WorkflowViewState.IdRef="If_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="595.3333333333334,1328" sap2010:WorkflowViewState.IdRef="Sequence_38">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="strRSKSalesOrderPickedMailBody" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each Row dtRSKSORequest and if duplicate but records approved to proceed for placing sales order" DataTable="[dt_RSKSORequest]" DisplayName="For Each Row dtRSKSORequest and if duplicate but records approved to proceed for placing sales order" sap:VirtualizedContainerService.HintSize="533.3333333333334,804.6666666666666" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                <ui:ForEachRow.Body>
                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,559.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign: get init dictionary of string of object" sap:VirtualizedContainerService.HintSize="434,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[dictSOPRSKsalesOrders]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String,object)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For column Each in dtRSKSORequest" DisplayName="For column Each in dtRSKSORequest" sap:VirtualizedContainerService.HintSize="434,102.66666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dt_RSKSORequest.Columns]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="sd:DataColumn">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="Column" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign: Column as key and row value as value" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[dictSOPRSKsalesOrders(Column.ColumnName)]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">[CurrentRow(Column.ColumnName)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEach>
                                      <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Add Queue Item RSK Sales orders" DisplayName="Add Queue Item RSK Sales orders" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="434,251.33333333333334" sap2010:WorkflowViewState.IdRef="AddQueueItem_2" ItemInformationCollection="[dictSOPRSKsalesOrders]" Priority="Normal" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Reference="[CurrentRow(&quot;SOLD to Party&quot;).ToString]">
                                        <ui:AddQueueItem.ItemInformation>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                        </ui:AddQueueItem.ItemInformation>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:AddQueueItem>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEachRow.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEachRow>
                              <ui:ReadTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="Read Text File: Responding email sender RSK SO request is picked" Content="[strRSKSalesOrderPickedMailBody]" DisplayName="Read Text File: Responding email sender RSK SO request is picked" FileName="[in_Config(&quot;RSK_SalesOrderPickedMailBody&quot;).ToString]" sap:VirtualizedContainerService.HintSize="533.3333333333334,159.33333333333334" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ReadTextFile>
                              <ui:ReplyToOutlookMailMessage AddBcc="{x:Null}" AddCc="{x:Null}" AddTo="{x:Null}" NewSubject="{x:Null}" ReplyFrom="{x:Null}" TimeoutMS="{x:Null}" Body="[strRSKSalesOrderPickedMailBody]" DisplayName="Reply To Outlook Mail Message: Order Picked for delivery" sap:VirtualizedContainerService.HintSize="533.3333333333334,158.66666666666666" sap2010:WorkflowViewState.IdRef="ReplyToOutlookMailMessage_1" Importance="Normal" MailMessage="[CurrentMail]" ReplyAll="False">
                                <ui:ReplyToOutlookMailMessage.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:ReplyToOutlookMailMessage.Files>
                              </ui:ReplyToOutlookMailMessage>
                              <ui:MoveOutlookMessage Account="{x:Null}" DisplayName="Move Outlook Mail Message: Move email to MailProcessedFolder" sap:VirtualizedContainerService.HintSize="533.3333333333334,117.33333333333333" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_1" MailFolder="[path.Combine(in_Config(&quot;EmailFolder&quot;).ToString,in_Config(&quot;MailProcessedFolder&quot;).ToString)]" MailMessage="[CurrentMail]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,322.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_39">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MoveOutlookMessage Account="{x:Null}" DisplayName="Move Outlook Mail Message: Move email to MailProcessedFolder" sap:VirtualizedContainerService.HintSize="354,120" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_2" MailFolder="[path.Combine(in_Config(&quot;EmailFolder&quot;).ToString,in_Config(&quot;MailNotProcessedFolder&quot;).ToString)]" MailMessage="[CurrentMail]" />
                              <Throw DisplayName="Throw SE:No SOP RSK Data to push to queue" Exception="[new BusinessRuleException(&quot;No SOP RSK Data to push to queue&quot;)]" sap:VirtualizedContainerService.HintSize="354,114.66666666666667" sap2010:WorkflowViewState.IdRef="Throw_2" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </umab:ForEachEmailX.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </umab:ForEachEmailX>
              </Sequence>
            </ActivityAction>
          </umab:OutlookApplicationCard.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </umab:OutlookApplicationCard>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1248,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="sysexception" />
            </ActivityAction.Argument>
            <Rethrow DisplayName="Rethrow: System exception in dispatcher" sap:VirtualizedContainerService.HintSize="334,25.333333333333332" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="1248,23.333333333333332" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow DisplayName="Rethrow: NO DATA TO PUSH TO QUEUE exception SE" sap:VirtualizedContainerService.HintSize="340,25.333333333333332" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message: Kill Process Close all Outlook instances" sap:VirtualizedContainerService.HintSize="1282,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Kill Process: Close all Outlook instances&quot;]" />
  </Sequence>
</Activity>